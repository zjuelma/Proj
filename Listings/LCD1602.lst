C51 COMPILER V9.60.7.0   LCD1602                                                           09/04/2024 00:22:03 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: E:\studytools\keil5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          /*
   2           hushmoon
   3           2024.8.31
   4           NATSU NO OWARI
   5          */
   6          #include "LCD1602.h"
   7          
   8          /*
   9              @author hushmoon
  10              Name: LCD_Write_Command
  11              Function: Write command to LCD1602
  12              Parameter:
  13                  _cmd -- the command
  14                  _check -- whether to wait for availability or not
  15              Additional Descriptions:
  16                  RS = 0->LCD implement instructions
  17                  RS = 1->LCD display data
  18                  RW = 0->write data TO LCD
  19                  RW = 1->read data FROM LCD
  20                  EN: enable.only when there is a level jump from 0 to 1, can LCD update the data displayed
  21          */
  22          void LCD_Write_Command(uchar _cmd, uchar _check)
  23          {
  24   1      
  25   1          // waiting for availability
  26   1          if (_check) WaitForEnable();
  27   1      
  28   1          CLR_RS;
  29   1          CLR_RW;
  30   1          CLR_EN;
  31   1          LCD_Delay1ms();
  32   1      
  33   1          DataPort = _cmd;
  34   1          LCD_Delay1ms();
  35   1      
  36   1          // send level pulse
  37   1          SET_EN; // EN = 1
  38   1          LCD_Delay1ms();
  39   1          CLR_EN; // EN = 0
  40   1          LCD_Delay1ms();
  41   1      }
  42          
  43          /*
  44              @author hushmoon
  45              Name: LCD_Write_Data
  46              Function: Write data to LCD1602
  47              Parameter: _dat -- the data
  48          */
  49          void LCD_Write_Data(uchar _dat)
  50          {
  51   1          // waiting for availability
  52   1          WaitForEnable();
  53   1      
  54   1          SET_RS;
C51 COMPILER V9.60.7.0   LCD1602                                                           09/04/2024 00:22:03 PAGE 2   

  55   1          CLR_RW;
  56   1          CLR_EN;
  57   1          LCD_Delay1ms();
  58   1      
  59   1          DataPort = _dat;
  60   1          LCD_Delay1ms();
  61   1      
  62   1          // send level pulse
  63   1          SET_EN; // EN = 1
  64   1          LCD_Delay1ms();
  65   1          CLR_EN; // EN = 0
  66   1          LCD_Delay1ms();
  67   1      }
  68          
  69          /*
  70              @author hushmoon
  71              Name: LCD_Init
  72              Function: Initializing LCD1602
  73              Parameter: void
  74          */
  75          void LCD_Init(void)
  76          {
  77   1          LCD_Write_Command(0x38, 0);
  78   1          DelayMs(5);
  79   1          LCD_Write_Command(0x38, 0);
  80   1          DelayMs(5);
  81   1          LCD_Write_Command(0x38, 0);
  82   1          DelayMs(5);
  83   1      
  84   1          LCD_Write_Command(0x38, 1);
  85   1          LCD_Write_Command(0x08, 1);
  86   1          LCD_Write_Command(0x01, 1);
  87   1          LCD_Write_Command(0x06, 1);
  88   1          LCD_Write_Command(0x0C, 1);
  89   1      }
  90          
  91          /*
  92              @author hushmoon
  93              Name: LCD_Clear
  94              Function: clear the screen
  95              Parameter: void
  96          */
  97          void LCD_Clear(void)
  98          {
  99   1          LCD_Write_Command(0x01, 1);
 100   1          DelayMs(5);
 101   1      }
 102          
 103          /*
 104              @author hushmoon
 105              Name: WaitForEnable
 106              Function: wait for lcd1602 being available
 107              Parameter: void
 108          */
 109          void WaitForEnable(void)
 110          {
 111   1          uint later = 0;
 112   1          DataPort   = 0xFF;
 113   1          CLR_RS;
 114   1          SET_RW;
 115   1          Delay1Us();
 116   1          SET_EN;
C51 COMPILER V9.60.7.0   LCD1602                                                           09/04/2024 00:22:03 PAGE 3   

 117   1          Delay1Us();
 118   1          Delay1Us();
 119   1      
 120   1          while (((DataPort & 0x80) != 0) && (later < 1000)) {
 121   2              Delay1Us();
 122   2              later++;
 123   2          }
 124   1      
 125   1          CLR_EN;
 126   1      }
 127          
 128          /*
 129              @author hushmoon
 130              Name: LCD_LocateXY
 131              Function: locating the display address
 132              Parameter:
 133                  _X: display column
 134                  _Y: display row
 135          */
 136          void LCD_LocateXY(uchar _X, uchar _Y)
 137          {
 138   1          uchar temp;
 139   1      
 140   1          temp = _X & 0x0F; // preserve the last 4bits of x
 141   1          _Y &= 0x01;       // only preserve the last bit of y
 142   1      
 143   1          if (_Y) temp |= 0x40; // if it is on the second row
 144   1          temp |= 0x80;         // When writing the display address, the highest bit D7 is required to be consta
             -nt at high level 1
 145   1      
 146   1          LCD_Write_Command(temp, 1);
 147   1      }
 148          
 149          /*
 150              @author hushmoon
 151              Name: LCD_Display_Char
 152              Function: LCD display a single char
 153              Parameter:
 154                  x: the culumn
 155                  y: the row
 156                  _char: the char
 157          */
 158          void LCD_Display_Char(uchar x, uchar y, uchar _char)
 159          {
 160   1          LCD_LocateXY(x, y);
 161   1          LCD_Write_Data(_char);
 162   1      }
 163          
 164          /*
 165              @author hushmoon
 166              Name: LCD_Display_String
 167              Function: LCD display a string
 168              Parameter:
 169                  x: the culumn
 170                  y: the row
 171                  *string: the string
 172          */
 173          void LCD_Display_String(uchar x, uchar y, uchar *string)
 174          {
 175   1          uchar i;
 176   1          LCD_LocateXY(x, y);
 177   1          for (i = 0; string[i] != '\0'; i++) {
C51 COMPILER V9.60.7.0   LCD1602                                                           09/04/2024 00:22:03 PAGE 4   

 178   2              LCD_Write_Data(string[i]);
 179   2          }
 180   1      }
 181          
 182          /*
 183              @author hushmoon
 184              Name: LCD_Display_Number
 185              Function: LCD display a number
 186              Parameter:
 187                  x: the culumn
 188                  y: the row
 189                  _dat: the number
 190                  _len: the number's length
 191          */
 192          void LCD_Display_Number(uchar x, uchar y, uint _dat, uchar _len)
 193          {
 194   1          uchar i;
 195   1          uint divisor = 1;
 196   1      
 197   1          LCD_LocateXY(x, y);
 198   1      
 199   1          for (i = 1; i < _len; i++) {
 200   2              divisor *= 10;
 201   2          }
 202   1      
 203   1          for (i = 0; i < _len; i++) {
 204   2              uchar digit = (_dat / divisor) % 10;
 205   2              LCD_Write_Data(digit + '0');
 206   2              divisor /= 10;
 207   2          }
 208   1      }
 209          
 210          /*
 211              @author hushmoon
 212              Name: LCD_Display_LCD_Display_SignedNumber
 213              Function: LCD display a signed number
 214              Parameter:
 215                  x: the culumn
 216                  y: the row
 217                  _dat: the number
 218                  _len: the number's length
 219          */
 220          void LCD_Display_SignedNumber(uchar x, uchar y, int _dat, uchar _len)
 221          {
 222   1          uchar i;
 223   1          uint divisor = 1;
 224   1          uint number;
 225   1      
 226   1          LCD_LocateXY(x, y);
 227   1      
 228   1          if (_dat < 0) {
 229   2              LCD_Write_Data('-');
 230   2              number = -_dat;
 231   2          } else {
 232   2              number = _dat;
 233   2          }
 234   1      
 235   1          for (i = 1; i < _len; i++) {
 236   2              divisor *= 10;
 237   2          }
 238   1      
 239   1          for (i = 0; i < _len; i++) {
C51 COMPILER V9.60.7.0   LCD1602                                                           09/04/2024 00:22:03 PAGE 5   

 240   2              uchar digit = (number / divisor) % 10;
 241   2              LCD_Write_Data(digit + '0');
 242   2              divisor /= 10;
 243   2          }
 244   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    488    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
