C51 COMPILER V9.60.7.0   MLX90614                                                          09/04/2024 18:00:22 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MLX90614
OBJECT MODULE PLACED IN .\Objects\MLX90614.obj
COMPILER INVOKED BY: E:\studytools\keil5\C51\BIN\C51.EXE MLX90614.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\MLX90614.lst) TABS(2) OBJECT(.\Objects\MLX90614.obj)

line level    source

   1          /*
   2           hushmoon
   3           2024.9.1
   4           AKIE NO HAJIME
   5          */
   6          #include "MLX90614.h"
   7          #define COMPENSATION 1.055 // compensation factor
   8          #define slope        1.051
   9          #define intercept    17
  10          
  11          bdata uchar flag;
  12          sbit bit_out = flag ^ 7;
  13          sbit bit_in  = flag ^ 0;
  14          
  15          uchar Data_High, Data_Low, PEC;
  16          
  17          /*
  18              @author hushmoon
  19              Name: I2C_Delay_Us
  20              Function: delay for 1us approximately
  21              Parameter: us -- the total us you wanna delay
  22          */
  23          void I2C_Delay_Us(uint us)
  24          {
  25   1          while (us--) {
  26   2              Delay1Us();
  27   2          }
  28   1      }
  29          
  30          // I2C MODULE
  31          
  32          /*
  33              @author hushmoon
  34              Name: I2C_Start
  35              Function: start bit
  36              Parameter: void
  37          */
  38          void I2C_Start(void)
  39          {
  40   1          SDA = 1;
  41   1          DelayUs2x(4);
  42   1          SCL = 1;
  43   1          DelayUs2x(4);
  44   1          SDA = 0;
  45   1          DelayUs2x(4);
  46   1          SCL = 0;
  47   1          DelayUs2x(4);
  48   1      }
  49          
  50          /*
  51              @author hushmoon
  52              Name: I2C_Stop
  53              Function: end bit
  54              Parameter: void
C51 COMPILER V9.60.7.0   MLX90614                                                          09/04/2024 18:00:22 PAGE 2   

  55          */
  56          void I2C_Stop(void)
  57          {
  58   1          SCL = 0;
  59   1          DelayUs2x(4);
  60   1          SDA = 0;
  61   1          DelayUs2x(4);
  62   1          SCL = 1;
  63   1          DelayUs2x(4);
  64   1          SDA = 1;
  65   1          DelayUs2x(4);
  66   1      }
  67          
  68          /*
  69              @author hushmoon
  70              Name: send_bit
  71              Function: send one bit
  72              Parameter: void
  73          */
  74          void send_bit(void)
  75          {
  76   1          if (bit_out == 0)
  77   1              SDA = 0;
  78   1          else
  79   1              SDA = 1;
  80   1          DelayUs2x(1);
  81   1          SCL = 1;
  82   1          DelayUs2x(4);
  83   1          SCL = 0;
  84   1          DelayUs2x(4);
  85   1      }
  86          
  87          /*
  88              @author hushmoon
  89              Name: send_byte
  90              Function: send one byte
  91              Parameter: _byte -- the byte you wanna send
  92          */
  93          void send_byte(uchar _byte)
  94          {
  95   1          char i, dat;
  96   1          int retry_counter;
  97   1          dat           = _byte;
  98   1          retry_counter = 10;
  99   1      
 100   1          while (retry_counter > 0) {
 101   2              for (i = 0; i < 8; i++) {
 102   3                  bit_out = (dat & 0x80) ? 1 : 0;
 103   3                  send_bit();
 104   3                  dat <<= 1;
 105   3              }
 106   2              receive_bit();
 107   2              if (bit_in == 0) {
 108   3                  return;
 109   3              }
 110   2              I2C_Stop();
 111   2              I2C_Start();
 112   2              retry_counter--; // Decrement retry counter
 113   2              dat = _byte;     // Reset data for retransmission
 114   2          }
 115   1      }
 116          
C51 COMPILER V9.60.7.0   MLX90614                                                          09/04/2024 18:00:22 PAGE 3   

 117          /*
 118              @author hushmoon
 119              Name: receive_bit
 120              Function: receive one bit
 121              Parameter: void
 122          */
 123          void receive_bit(void)
 124          {
 125   1          SDA    = 1;
 126   1          bit_in = 1;
 127   1          SCL    = 1;
 128   1          DelayUs2x(4);
 129   1          bit_in = SDA;
 130   1          DelayUs2x(2);
 131   1          SCL = 0;
 132   1          DelayUs2x(4);
 133   1      }
 134          
 135          /*
 136              @author hushmoon
 137              @return dat -- the byte you received
 138              Name: receive_byte
 139              Function: receive one byte
 140              Parameter: void
 141          */
 142          uchar receive_byte(void)
 143          {
 144   1          uchar i, dat;
 145   1          dat = 0;
 146   1          for (i = 0; i < 8; i++) {
 147   2              dat = dat << 1;
 148   2              receive_bit();
 149   2              if (bit_in == 1)
 150   2                  dat = dat + 1;
 151   2          }
 152   1          send_bit(); // acknowledgement
 153   1          return dat;
 154   1      }
 155          
 156          /*
 157              @author hushmoon
 158              @return T -- the temperature you read but in kevin
 159              Name: Read_T
 160              Function: read temperature through mlx90614
 161              Parameter: void
 162          */
 163          uint Read_T(void)
 164          {
 165   1          I2C_Start();
 166   1          send_byte(0x00); // address
 167   1          send_byte(0x07); // command
 168   1      
 169   1          I2C_Start();
 170   1          send_byte(0x01);
 171   1          bit_out   = 0;
 172   1          Data_Low  = receive_byte();
 173   1          bit_out   = 0;
 174   1          Data_High = receive_byte();
 175   1          bit_out   = 1;
 176   1          PEC       = receive_byte();
 177   1          I2C_Stop();
 178   1          return (Data_High * 256 + Data_Low);
C51 COMPILER V9.60.7.0   MLX90614                                                          09/04/2024 18:00:22 PAGE 4   

 179   1      }
 180          
 181          /*
 182              @author hushmoon
 183              @return T -- the temperature you read but in celsius
 184              Name: Convert_T
 185              Function: Convert the temperature from kelvin to celsius
 186              Parameter: void
 187          */
 188          int Convert_T(void)
 189          {
 190   1          int temp, T;
 191   1          temp = Read_T();
 192   1          T    = ((float)temp * 0.02f - 273.15f) * 100 * slope + intercept;
 193   1          return T;
 194   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    343    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
